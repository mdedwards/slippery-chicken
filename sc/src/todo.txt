MDE Fri Jan 13 15:22:25 2012 -- in fibonacci (l-for-lookup), consider
implementing the remix-in algorithm of cheat sheet (see get-loops seqs)

;;; ****m* rthm-seq/insert-bar
;;; TODO: Test that the pitch-seq-palette splicing actually works; add
;;; inversions if that was in the original 

;;; ****m* slippery-chicken/cmn-display
  (unless players 
    (setf players (players (ensemble sc))))
  (when rehearsal-letters-all-players 
    ;; todo: this is still not working ....
    (set-rehearsal-letters sc players))
  (when tempi-all-players 
    (update-events-tempo sc players))
  (when multi-bar-rests

;;; For some reason, when this is a :before method, clisp in windows crashes
;;; with a SIGSEV fault (it's no problem with clisp under linux)!  Can't find
;;; the reason so don't descend into any further methods.  todo: fix this!
#+(and clisp win32)
(defmethod print-object ((al assoc-list) stream)

;; todo: adding a two-bar rthm-seq to a rthm-seq-palette fails, possibly
;; because the two bars thing gets recursively make into something else???
;;; ****m* assoc-list/add

;;; todo: is this really recounting notes etc. when we manually call it?
(defmethod update-slots ((bh bar-holder)

(defmethod update-slots ((bh bar-holder)
....
            (incf (num-notes bh) (num-notes thing))
            (incf (num-score-notes bh) (num-score-notes thing))
            (incf (num-rests bh) (num-rests thing))
            ;; only sections, subsections and sequenzes should update bar and
            ;; start-time, the player-sections all have the same start-time and
            ;; bar. 
            ;; todo: update the num-notes etc. for each separate instrument...
            (when loop-update
              (setf bar (1+ (end-bar thing))
                    time-qtrs (end-time-qtrs thing)
                    time (end-time thing))))))

;;; todo: this is inconsistent in naming (e.g. note is not a class, but pitch
;;; and event are) and returns a different type depending on whether we're
;;; accessing a chord note (pitch) or single note (event).  Rethink the
;;; interface here.
;;; 
;;; ****m* bar-holder/get-note


(defun cmn-display (system-list 
....
       (full-last-line nil)
       (automatic-line-breaks automatic-line-breaks)
       (first-measure-number start-bar-numbering)
       ;; todo: these don't seem to work--ask Bill.
       (staff-name-font "Verdana")
       (staff-name-font-scaler .6)
       (default-font '("Verdana" "Verdana-Italic" "Verdana-Bold" 
                       "Verdana-BoldItalic"))

;;; SAR Tue Feb  7 12:10:55 GMT 2012: from set-palette.lsp/cmn-display:
;;; todo: there's a bug here that tries to put all sets on one page!

;;; SAR Wed Feb 8 12:46:15 GMT 2012: moved this here from
    set-palette.lsp/recursive-set-palette-from-ring-mod:
;;; todo: make the sp's proper linked-named-objects so we can (get-all-refs)
;;; with a list of notes

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; todo: re-beam the bar?
;;; todo: this makes it impossible to display the sets: fix this.
(defmethod re-bar ((sc slippery-chicken)
                   &key start-bar 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
player-section.lsp
(defun re-bar-aux (bars &optional verbose auto-beam)
  (when bars
    (let* ((rehearsal-letter nil)
...
      ;; MDE Thu Dec  8 23:57:26 2011 -- changed following call
      ;; (consolidate-rests first-bar beat)
      (consolidate-rests first-bar :beat beat)
      (consolidate-notes first-bar nil beat)
      (when auto-beam
        ;; todo: this doesn't work either...
        (auto-beam first-bar beat nil))
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

MDE Mon Feb 27 18:13:07 2012 -- this doesn't seem right...use the number of
set-map refs in each section instead?

(defmethod num-seqs ((sc slippery-chicken) section-ref)
